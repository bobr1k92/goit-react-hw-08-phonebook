{"version":3,"file":"static/js/631.cd5a26e4.chunk.js","mappings":"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","sources":["redux/contacts/selectors.jsx","redux/filter/selectors.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","export const selectFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\",\"title\":\"ContactsList_title__Nc-fb\",\"text\":\"ContactsList_text__URA4K\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/selectors';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport ImageIcon from '@mui/icons-material/Image';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Skeleton from '@mui/material/Skeleton';\n\nimport css from './ContactsList.module.css';\n\nexport const ContactsList = () => {\n    const contacts = useSelector(selectContacts);\n    const isLoading = useSelector(selectIsLoading);\n    const { filter } = useSelector(selectFilter);\n\n    const dispatch = useDispatch();\n    const handleDelete = (id) => dispatch(deleteContact(id));\n\n    const getVisibleContacts = () => {\n    const normalize = filter.toLowerCase();\n        return contacts.filter(contact => contact.name.toLowerCase().includes(normalize))\n    }\n\n    const visibleContacts = getVisibleContacts();\n\n    return <ul className={css.list}><p className={css.title}>Contacts:</p>{visibleContacts.map(({ id, name, number }) => (\n        <ListItem key={id}> {isLoading ? <Skeleton variant=\"circular\" width={40} height={40} /> :\n                    <ListItemAvatar>\n                        <Avatar>\n                            <ImageIcon />\n                        </Avatar>\n                    </ListItemAvatar>}\n                    {isLoading ? <Skeleton variant=\"text\" width={300} height={40} /> : <ListItemText primary={name} secondary={number} />}\n                    {isLoading ? <Skeleton variant=\"circular\" width={20} height={20} /> : <IconButton aria-label=\"delete\" type='button' onClick={() => handleDelete(id)} size=\"small\">\n                        <DeleteIcon title=\"delete\" />\n                    </IconButton>}\n                </ListItem>))}\n            </ul>\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__wrapper\":\"Filter_filter__wrapper__RVCEc\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/filter/selectors';\nimport TextField from '@mui/material/TextField';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const { filter } = useSelector(selectFilter);\n\n    const onFilterChange = (event) => dispatch(changeFilter(event.target.value))\n\n\n    return <div className={css.filter__wrapper}>\n                <TextField\n                    id=\"outlined-search\"\n                    label=\"Find contacts by name\"\n                    type=\"text\"\n                    value={filter}    \n                    onChange={onFilterChange} size=\"small\" />\n            </div>\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"container__phonenumber\":\"ContactForm_container__phonenumber__iVmI0\",\"form\":\"ContactForm_form__dhl+T\",\"form__wrapper\":\"ContactForm_form__wrapper__pRDKV\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\"};","import { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleChange = event => {\n        const { name, value } = event.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value)\n                break;\n            \n            case 'number':\n                setNumber(value)\n                break;\n        \n            default:\n                return;\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const form = event.currentTarget;\n        \n        const addedContacts = getAddedContacts(name);\n        (addedContacts) ?\n            Notiflix.Notify.warning(`${name} is already in contacts`) :\n            dispatch(addContact({ name: form.elements.name.value, number: form.elements.number.value }));\n\n        setName('');\n        setNumber('');\n    }\n\n    const getAddedContacts = (name) => {\n        return contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n    }\n\n\n    return (\n        <div className={css.container}>\n            <p className={css.title}>To add a contact, enter the name and phone number</p>\n            <div>\n                <Box\n                component=\"form\"\n                sx={{\n                    '& > :not(style)': { m: 1, width: '25ch' },\n                    }}\n                className={css.container__phonenumber}\n                noValidate\n                autoComplete=\"off\"\n                onSubmit={handleSubmit}>\n                    <TextField\n                        id=\"standard-basic\"\n                        label=\"Name\"\n                        variant=\"standard\"\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        value={name}\n                        onChange={handleChange}/>\n                    <TextField\n                        id=\"standard-basic\"\n                        label=\"Number\"\n                        variant=\"standard\"\n                        type=\"tel\"\n                        name=\"number\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        value={number}\n                        onChange={handleChange}\n                        inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}/>\n                    <Box sx={{ '& > :not(style)': { m: 1 } }}>\n                        <Fab color=\"primary\" aria-label=\"add\" type='submit' size=\"small\">\n                            <AddIcon />\n                        </Fab>\n                    </Box>\n                </Box>\n            </div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__TJkHA\",\"contacts__wrapper\":\"Contacts_contacts__wrapper__kP-z-\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectContacts, selectError } from \"redux/contacts/selectors\";\nimport Notiflix from \"notiflix\";\nimport { ContactsList } from \"../components/ContactsList/ContactsList\";\nimport { Filter } from \"../components/Filter/Filter\";\nimport { ContactForm } from \"../components/ContactForm/ContactForm\";\nimport css from \"./Contacts.module.css\";\n\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const error = useSelector(selectError);\n    const items = useSelector(selectContacts);\n  \n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch])\n  \n\n    return (\n        <div className={css.container}>\n            <ContactForm />\n            {items.length > 0 && <div className={css.contacts__wrapper}>\n                <Filter />\n                {error && Notiflix.Notify.failure('Error')}\n                <ContactsList />\n            </div>}\n      </div>\n    )\n}"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactsList","useSelector","dispatch","useDispatch","visibleContacts","normalize","toLowerCase","contact","name","includes","getVisibleContacts","className","css","map","id","number","ListItem","Skeleton","variant","width","height","ListItemAvatar","Avatar","Image","ListItemText","primary","secondary","IconButton","type","onClick","deleteContact","handleDelete","size","Delete","title","Filter","TextField","label","value","onChange","event","changeFilter","target","ContactForm","useState","setName","setNumber","handleChange","currentTarget","getAddedContacts","find","Box","component","sx","m","noValidate","autoComplete","onSubmit","preventDefault","form","Notiflix","addContact","elements","pattern","inputProps","inputMode","Fab","color","Add","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}